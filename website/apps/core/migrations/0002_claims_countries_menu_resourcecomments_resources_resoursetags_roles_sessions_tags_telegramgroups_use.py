# Generated by Django 2.2.6 on 2019-10-09 18:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField()),
                ('slug', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('creation_date', models.DateTimeField(blank=True, null=True)),
                ('last_edit', models.DateTimeField()),
                ('approved', models.BooleanField()),
                ('appved_user', models.ForeignKey(db_column='appved_user', on_delete=django.db.models.deletion.DO_NOTHING, related_name='appved_user', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(db_column='creator', on_delete=django.db.models.deletion.DO_NOTHING, related_name='creator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('tag', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TelegramGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('icon', models.TextField()),
                ('user_count', models.IntegerField()),
                ('group_id', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VacancyGroup',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Vacancies',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('slug', models.TextField()),
                ('description', models.TextField()),
                ('city', models.TextField(blank=True, null=True)),
                ('contact_person', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(db_column='country', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Countries')),
                ('vacancy_group', models.ForeignKey(db_column='vacancy_group', on_delete=django.db.models.deletion.DO_NOTHING, to='core.VacancyGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Sessions',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('session_date', models.DateTimeField()),
                ('ip_address', models.GenericIPAddressField()),
                ('os', models.TextField()),
                ('browser', models.TextField()),
                ('device', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceComments',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('comment', models.TextField()),
                ('commenter', models.ForeignKey(db_column='commenter', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('resource_ud', models.ForeignKey(db_column='resource_ud', on_delete=django.db.models.deletion.DO_NOTHING, to='core.Resources')),
            ],
        ),
        migrations.CreateModel(
            name='Claims',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('type', models.TextField()),
                ('value', models.TextField(blank=True, null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Roles')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Roles')),
            ],
            options={
                'unique_together': {('user', 'role')},
            },
        ),
        migrations.CreateModel(
            name='ResourseTags',
            fields=[
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.Resources')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.Tags')),
            ],
        ),
    ]
